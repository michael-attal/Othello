@startuml Othello Diagram

class Board {
    - players: list of Player
    - size: int
    - number_of_disk_to_start: int
}

abstract class Player {
    - name: string
    - symbol: string 
}

Human <|-- Player
class Human {

}

AI <|-- Player
class AI {

}

abstract class GameRules {
    - board: Board
    - players: list of Player

    + is_valid_move(board: Board, disk: Disk): boolean
    + get_valid_moves(board: Board, disk: Disk): list of Position
    + is_game_over(board: Board): boolean
    + get_winner(board: Board): Player
}

ClassicRules <|-- GameRules
class ClassicRules {
    + ClassicRules(board: board, players: list of Player)
}

class Game {
    - board: Board
    - rules: GameRules
    - players: list of Player
    - curr_player: Player

    + save_game_result():

}

class GameView {

}

class GameConsoleView <|-- GameView {

}

class GameGuiView <|-- GameView{

}

class BoardView {

}

class BoardConsoleView <|-- BoardView {

}

class BoardGuiView <|-- BoardView {

}

class GameConsoleController {
    - view: Board
    - model: Game

    + init_game(): str
    + run_game(): void
}

class GameGuiController {
    - view: Board
    - model: Game

    + init_game(): str
    + run_game(): void
}

@enduml